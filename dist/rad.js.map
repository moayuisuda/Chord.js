{"version":3,"sources":["webpack://rad/webpack/universalModuleDefinition","webpack://rad/webpack/bootstrap","webpack://rad/./src/maps.js","webpack://rad/./src/converters.js","webpack://rad/./src/utils.js","webpack://rad/./src/caculators.js","webpack://rad/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","intervalMap","0","1","2","3","4","5","6","7","8","9","10","11","noteMap","degreeMap","12","13","14","15","typeMap","Map","scaleMap","absoluteIntervalArr","rootInterval","intervalArr","abInterval","result","interval","push","intervalArrToNotesO","initOctave","signType","octave","note","noteKey","signIndex","intervalToNote","intervalArrToNotes","scaleToIntervalArr","scale","length","intervalArrToChord","third","fifth","join","type","map","stringMap","entries","console","log","noteToInterval","toString","typeToScale","degreeToInterval","degree","getRoot","str","match","getType","reg","RegExp","getAdd","addItem","exec","getOmit","omitItem","getOn","getSignIndex","replaceRoot","flagInterval","noteInterval","splice","Number","unshift","copy","obj","caculateChord","add","omit","on","sort","a","b","j","chord","strOrOptions","chordArr","options","abIntervalArr","caculateScale","scaleChords","chordsArr","extendIntervalArr","concat","caculateScaleChords"],"mappings":"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","file":"rad.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"rad\"] = factory();\n\telse\n\t\troot[\"rad\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","let intervalMap = {\r\n    0: ['C'],\r\n    1: ['C#', 'Db'],\r\n    2: ['D'],\r\n    3: ['D#', 'Eb'],\r\n    4: ['E'],\r\n    5: ['F'],\r\n    6: ['F#', 'Gb'],\r\n    7: ['G'],\r\n    8: ['G#', 'Ab'],\r\n    9: ['A'],\r\n    10: ['A#', 'Bb'],\r\n    11: ['B']\r\n}\r\n\r\nlet noteMap = {\r\n    'C': 0,\r\n    'C#': 1,\r\n    'Db': 1,\r\n    'D': 2,\r\n    'D#': 3,\r\n    'Eb': 3,\r\n    'E': 4,\r\n    'Fb': 4,\r\n    'E#': 5,\r\n    'F': 5,\r\n    'F#': 6,\r\n    'Gb': 6,\r\n    'G': 7,\r\n    'G#': 8,\r\n    'Ab': 8,\r\n    'A': 9,\r\n    'A#': 10,\r\n    'Bb': 10,\r\n    'B': 11,\r\n}\r\n\r\nlet degreeMap = {\r\n    '#2': 3,\r\n    'b3': 3,\r\n    '#4': 6,\r\n    'b5': 6,\r\n    '#4': 8,\r\n    'b6': 8,\r\n    '#6': 10,\r\n    'b7': 10,\r\n    '#8': 13,\r\n    'b9': 13,\r\n    '#9': 13,\r\n    'b10': 13,\r\n    '#11': 18,\r\n    'b12': 18,\r\n    '#12': 20,\r\n    'b13': 20,\r\n    '#13': 22,\r\n    'b14': 22,\r\n    2: 2,\r\n    3: 4,\r\n    4: 5,\r\n    5: 7,\r\n    6: 9,\r\n    7: 11,\r\n    8: 12, //1\r\n    9: 14, //2\r\n    10: 16, //3\r\n    11: 17, //4\r\n    12: 19, //5\r\n    13: 21, //6\r\n    14: 23, //7\r\n    15: 24 //1\r\n}\r\n\r\nlet typeMap = new Map([\r\n    ['mM7', [3, 7, 11]],\r\n    ['m7', [3, 7, 10]],\r\n    ['m9', [3, 7, 10, 14]],\r\n    ['m11', [3, 7, 10, 14, 17]],\r\n    ['M7', [4, 7, 11]],\r\n    ['M9', [4, 7, 11, 14]],\r\n    ['M11', [4, 7, 11, 14, 17]],\r\n    ['aug', [4, 8]],\r\n    ['dim', [3, 6]],\r\n    ['sus2', [2, 7]],\r\n    ['sus4', [5, 7]],\r\n    ['7', [4, 7, 10]],\r\n    ['9', [4, 7, 10, 14]],\r\n    ['11', [3, 7, 11, 14, 17]],\r\n    ['m', [3, 7]],\r\n    ['', [4, 7]]\r\n])\r\n\r\nlet scaleMap = {\r\n    'ionian': [2,2,1,2,2,2,1],\r\n    'major': [2,2,1,2,2,2,1],    \r\n    'dorian': [2,1,2,2,2,1,2],\r\n    'phrygian': [1,2,2,2,1,2,2],\r\n    'lydian': [2,2,2,1,2,2,1],\r\n    'mixolydian': [2,2,1,2,2,1,2],\r\n    'aeolian': [2,1,2,2,1,2,2],\r\n    'minor': [2,1,2,2,1,2,2],\r\n    'locrian': [1,2,2,1,2,2,2]\r\n}\r\n\r\nexport {typeMap, noteMap, intervalMap, degreeMap, scaleMap}","import * as utils from './utils';\r\nimport {\r\n    typeMap,\r\n    noteMap,\r\n    intervalMap,\r\n    scaleMap,\r\n    degreeMap\r\n} from './maps'\r\n\r\n\r\n\r\nfunction absoluteIntervalArr(rootInterval, intervalArr) {\r\n    let result = [rootInterval];\r\n    let abInterval;\r\n\r\n    for (let interval of intervalArr) {\r\n        abInterval = rootInterval + interval;\r\n        result.push(abInterval);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n\r\nfunction intervalArrToNotesO(intervalArr, initOctave, signType) {\r\n\r\n    let result = [],\r\n        octave,\r\n        note,\r\n        noteKey,\r\n        signIndex = utils.getSignIndex(signType);\r\n\r\n    for (let interval of intervalArr) {\r\n        octave = initOctave;\r\n        while (interval >= 12) {\r\n            interval -= 12;\r\n            octave++;\r\n        }\r\n\r\n        note = intervalToNote(interval);\r\n        noteKey = note[signIndex] ? note[signIndex] : note[0];\r\n\r\n        result.push(noteKey + octave);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n\r\nfunction intervalArrToNotes(intervalArr, signType) {\r\n    let result = [],\r\n        note,\r\n        noteKey,\r\n        signIndex = utils.getSignIndex(signType);\r\n\r\n    for (let interval of intervalArr) {\r\n        while (interval >= 12) {\r\n            interval -= 12;\r\n        }\r\n\r\n        note = intervalToNote(interval);\r\n        noteKey = note[signIndex] ? note[signIndex] : note[0];\r\n\r\n        result.push(noteKey);\r\n\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n\r\nfunction scaleToIntervalArr(scale) {\r\n    let result = [];\r\n\r\n    for (let i = 0; i < scale.length; i++) {\r\n        if (!i) result.push(scale[i]);\r\n        else {\r\n            result.push(result[i - 1] + scale[i]);\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction intervalArrToChord([root, third, fifth], signType) {\r\n    // debugger\r\n    let key,\r\n        signIndex = utils.getSignIndex(signType);\r\n    key = [(third - root), (fifth - root)].join('-');\r\n    let map = utils.mapStringfy(typeMap);\r\n    let type = map[key];\r\n    console.log(root, intervalToNote(root), key)\r\n    while(root >= 12) {\r\n        root -= 12;\r\n    }\r\n    return (intervalToNote(root)[signIndex] + type);\r\n}\r\n\r\n\r\n\r\n// map getters\r\nfunction noteToInterval(note) {\r\n    let interval = noteMap[note];\r\n    if (!(Object.prototype.toString.call(interval) === '[object Undefined]')) return interval;\r\n    else throw `[Rad] Can't convert \"${note}\" into interval `\r\n}\r\n\r\nfunction typeToIntervalArr(type) {\r\n    let result = typeMap.get(type);\r\n    return utils.copy(result);\r\n}\r\n\r\nfunction typeToScale(type) {\r\n    let scale = scaleMap[type];\r\n    if (scale) return utils.copy(scale);\r\n    else throw `[Rad] Can't find a scale matched \"${type}\"`\r\n}\r\n\r\nfunction intervalToNote(interval) {\r\n    return intervalMap[interval];\r\n}\r\n\r\nfunction degreeToInterval(degree) {\r\n    let interval = degreeMap[degree];\r\n    if (interval) return interval;\r\n    else throw `[Rad] Can't find a interval matched \"${degree}\", the max degree is 15`\r\n}\r\n\r\nexport {\r\n    typeToScale,\r\n    typeToIntervalArr,\r\n    absoluteIntervalArr,\r\n    intervalArrToNotes,\r\n    intervalArrToNotesO,\r\n    scaleToIntervalArr,\r\n    noteToInterval,\r\n    degreeToInterval,\r\n    intervalArrToChord\r\n};","import {typeMap} from './maps'\r\nimport * as conve from './converters'\r\n\r\nfunction getRoot(str) {\r\n    let result = str.match(/[A-G](#|b)?/);\r\n    if(result) return result[0];\r\n    throw `[Rad] Can't resolve the root note for \"${str}\"`\r\n}\r\n\r\n\r\nfunction getNumber(str) {\r\n    return Number(str.match(/\\d/)[0]);\r\n}\r\n\r\n\r\nfunction getType(str) {\r\n\r\n    let result = null;\r\n    for (let [key] of typeMap) {\r\n        let reg = new RegExp(`^[A-G](#|b)?(${key}\\\\d{0,2})`);\r\n\r\n        if (result = str.match(reg)) {\r\n            return result[2];\r\n        }\r\n    }\r\n\r\n    throw `[Rad] Can't find a chord type matched \"${str}\"`;\r\n}\r\n\r\n\r\nfunction getAdd(str) {\r\n    let result = [];\r\n    let reg = /add((#|b)?\\d{1,2})/g;\r\n\r\n    let addItem;\r\n    while (addItem = reg.exec(str)) {\r\n        result.push(addItem[1])\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n\r\nfunction getOmit(str) {\r\n    let result = [];\r\n    let reg = /omit((#|b)?\\d{1,2})/g;\r\n\r\n    let omitItem;\r\n    while (omitItem = reg.exec(str)) {\r\n        result.push(omitItem[1])\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n\r\nfunction getOn(str) {\r\n    let result = str.match(/\\/([A-G](#|b)?)/);\r\n    if (result) {\r\n        return result[1];\r\n    }\r\n}\r\n\r\n\r\nfunction getSignIndex(signType) {\r\n    return (signType == '#') ? 0 : 1;\r\n}\r\n\r\n\r\nfunction strToOptions(str) {\r\n    let options = {\r\n        root: getRoot(str),\r\n        type: getType(str),\r\n        add: getAdd(str),\r\n        omit: getOmit(str),\r\n        on: getOn(str),\r\n    }\r\n\r\n    return options;\r\n}\r\n\r\n\r\nfunction replaceRoot(result, note, initOctave) {\r\n    if (initOctave) {\r\n        let root = result[0];\r\n        let flagInterval = conve.noteToInterval(getRoot(result[1]));\r\n        let noteInterval = conve.noteToInterval(note);\r\n\r\n        if (flagInterval === noteInterval) return;\r\n        else if (flagInterval > noteInterval) {\r\n            result.splice(0, 1, note + initOctave);\r\n        } else {\r\n            result.splice(0, 1, note + (initOctave - 1));\r\n        }\r\n\r\n        result.push(getRoot(root) + (getNumber(root) + 1));\r\n    } else {\r\n        result.unshift(note);\r\n    }\r\n}\r\n\r\nfunction copy(obj) {\r\n    if(!(obj instanceof Object)) return obj;\r\n    \r\n    let result = Object.prototype.toString.call(obj) === '[object Object]' ? {} : [];\r\n    for(let i in obj) {\r\n        result[i] = (obj instanceof Object) ? copy(obj[i]) : obj[i];\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction mapStringfy(map) {\r\n    \r\n    let stringMap = {};\r\n    for(let [key, value] of map.entries()) {\r\n        stringMap[value.join('-')] = key;\r\n    }\r\n\r\n    return stringMap;\r\n}\r\n\r\nexport {\r\n    getRoot,\r\n    getType,\r\n    getAdd,\r\n    strToOptions,\r\n    replaceRoot,\r\n    getSignIndex,\r\n    copy,\r\n    mapStringfy\r\n}","import * as utils from './utils';\r\nimport * as conve from './converters'\r\nimport { chord } from '.';\r\n\r\nfunction caculateChord({\r\n    root,\r\n    type,\r\n    add,\r\n    omit,\r\n    on\r\n}, initOctave, signType = '#') {\r\n    let\r\n        result = [],\r\n        intervalArr = conve.typeToIntervalArr(type),\r\n        rootInterval = conve.noteToInterval(root);\r\n\r\n\r\n    add.map(degree => {\r\n        intervalArr.push(conve.degreeToInterval(degree));\r\n    })\r\n\r\n    intervalArr.sort((a, b) => {\r\n        return a - b;\r\n    });\r\n\r\n    for (let i = 0; i < omit.length; i++) {\r\n        for (let j = 0; j < intervalArr.length; j++) {\r\n            if (conve.degreeToInterval(omit[i]) == intervalArr[j])\r\n                intervalArr.splice(j, 1);\r\n        }\r\n    }\r\n\r\n    let abInterval = conve.absoluteIntervalArr(rootInterval, intervalArr)\r\n    if (initOctave) result = conve.intervalArrToNotesO(abInterval, initOctave, signType);\r\n    else result = conve.intervalArrToNotes(abInterval, signType);\r\n\r\n    if (on) utils.replaceRoot(result, on, initOctave);\r\n    return result;\r\n}\r\n\r\n\r\nfunction caculateScale({\r\n    root,\r\n    type,\r\n}, initOctave = 4, signType = '#') {\r\n    let rootInterval = conve.noteToInterval(root),\r\n        scale = conve.typeToScale(type),\r\n        intervalArr = conve.scaleToIntervalArr(scale),\r\n        abIntervalArr = conve.absoluteIntervalArr(rootInterval, intervalArr);\r\n\r\n    if (initOctave) return conve.intervalArrToNotesO(abIntervalArr, initOctave, signType);\r\n    else return conve.intervalArrToNotes(abIntervalArr, signType);\r\n}\r\n\r\n\r\nfunction caculateScaleChords({\r\n    root,\r\n    type\r\n}, signType = '#') {\r\n    let\r\n        chordsArr = [],\r\n        extendIntervalArr = [],\r\n\r\n        rootInterval = conve.noteToInterval(root),\r\n        intervalArr = conve.scaleToIntervalArr(conve.typeToScale(type)),\r\n        abIntervalArr = conve.absoluteIntervalArr(rootInterval, intervalArr);\r\n\r\n    // get the intervalArr with three more notes in a scale\r\n    extendIntervalArr = extendIntervalArr.concat(abIntervalArr);\r\n\r\n    let length = 5;\r\n    for (let i = 1; i < length; i++) {\r\n        extendIntervalArr.push(abIntervalArr[i] + 12);\r\n    }\r\n\r\n    for (let i = 0; i < abIntervalArr.length - 1; i++) {\r\n        chordsArr.push(conve.intervalArrToChord([extendIntervalArr[i], extendIntervalArr[i + 2], extendIntervalArr[i + 4]], signType));\r\n    }\r\n\r\n    return chordsArr;\r\n}\r\n\r\nexport {\r\n    caculateChord,\r\n    caculateScaleChords,\r\n    caculateScale\r\n}","import {caculateChord, caculateScaleChords, caculateScale} from './caculators';\r\nimport {strToOptions} from './utils';\r\n\r\n\r\n\r\nfunction chord(strOrOptions, initOctave, signType) {\r\n\r\n    let chordArr = (Object.prototype.toString.call(strOrOptions) === '[object Object]')\r\n    ? caculateChord(strOrOptions, initOctave, signType)\r\n    : caculateChord(strToOptions(strOrOptions), initOctave, signType);\r\n\r\n    console.log(chordArr);\r\n\r\n    return chordArr;\r\n}\r\n\r\n\r\nfunction scale(options, initOctave, signType) {\r\n    return caculateScale(options, initOctave, signType);\r\n}\r\n\r\n\r\nfunction scaleChords(options) {\r\n    return caculateScaleChords(options);\r\n}\r\n\r\n\r\n\r\nexport {chord, scale, scaleChords};"],"sourceRoot":""}