{"version":3,"sources":["webpack:///./src/progression/sources.js","webpack:///./src/progression/chordItem.js","webpack:///./src/progression/utils.js","webpack:///./src/progression/index.js"],"names":["loopMap","scale","synth","chord","single","time","event","i","length","triggerAttackRelease","quick","oscillator","type","toMaster","loop","amount","instance","start","stop","flag","this","position","playing","currentTime","timer","template","data","bpm","types","input","initOctive","timeline","json","watch","val","oldVal","fn","changeWave","value","caculateTime","clearTimeout","setTimeout","immediate","initChords","chordItem","Object","assign","push","methods","waveOne","document","querySelector","waveTwo","style","animationDuration","Math","ceil","JSON","stringify","undefined","blob","Blob","e","createEvent","a","createElement","download","href","window","URL","createObjectURL","dataset","downloadurl","join","initMouseEvent","dispatchEvent","Promise","resolve","reject","selectedFile","target","files","reader","FileReader","readAsText","onload","result","handleFiles","parse","chordArr","console","log","match","splice","focus","addItem","loopEnd","cancel","timeFlag","item","Number","schedule","setFlag","caculateLoop"],"mappings":"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","file":"chunks/2.min.js","sourcesContent":["import {\r\n    Time,\r\n    Synth,\r\n    Part,\r\n    JCReverb,\r\n    FeedbackDelay,\r\n    DuoSynth\r\n} from 'tone'\r\n\r\nlet template =\r\n    `    <div class=\"module progression\" id=\"progression\" isReplace=\"true\">\r\n    <h1>PROGRESSION</h1>\r\n    <div class=\"progression_bar\">\r\n        <input type=\"file\" @input=\"importJson($event)\" class=\"bar_import\" />\r\n        <span class=\"bar_dec--beat\">rhythm</span><select name=\"\" id=\"\" v-model=\"type\">\r\n            <option v-for=\"type in types\" :label=\"type\" :value=\"type\" :key=\"type\"></option>\r\n        </select>\r\n        <span class=\"bar_dec--beat\">bpm</span><input class=\"bar_input--bpm\" v-model=\"bpm\" />\r\n\r\n        <span class=\"bar_dec--beat\">chord</span><input class=\"bar_input--chord\"\r\n            v-model=\"input.chord\" />\r\n        <span class=\"bar_dec--beat\">beat</span><input class=\"bar_input--amount\" type=\"number\"\r\n            v-model=\"input.amount\" />\r\n        /\r\n        <input class=\"bar_input--single\" type=\"number\" v-model=\"input.single\" />\r\n        <button class=\"bar_add\" @click=\"add\" v-show=\"playing === false\">＋</button><br />\r\n        <button class=\"bar_btn\" @click=\"toggle\"\r\n            :class=\"{'button--focus': playing}\">{{playing ? \"STOP\" : \"START\"}}</button>\r\n        <button class=\"bar_export\" @click=\"exportJson\">Export↑</button>\r\n    </div>\r\n\r\n    <div class=\"progression_input--result\">\r\n        <div v-for=\"item in timeline\" :key=\"item.flag\" class=\"result_item--wrapper\">\r\n            <div :class=\"['result_item', {'result_item--focus': (item.flag == flag)}]\">\r\n                <div class=\"item_pannel\" :style=\"{'width': (item.amount / item.single) * 200 +'px'}\"\r\n                    @click=\"item.focus.call(item)\">\r\n                    {{item.chord}} - {{item.amount + '/' + item.single}}\r\n                </div>\r\n                <button class=\"item_deleBtn\" @click=\"remove(item)\" v-show=\"playing === false\">X</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>`\r\n\r\nlet loopMap = {\r\n    // time: the real time when the loop is fired\r\n    // single: the time of each loop\r\n    scale: function (synth, chord, single) {\r\n        return new Part(function (time, event) {\r\n            for (let i = 0; i < chord.length; i++) {\r\n                synth.triggerAttackRelease(chord[i % chord.length], '16n', time + i * Time('16n'));\r\n            }\r\n        }, [{\r\n            time: 0\r\n        }])\r\n    },\r\n\r\n    quick: function (synth, chord, single) {\r\n        return new Part(function (time, event) {\r\n            for (let i = 0; i < chord.length; i++) {\r\n                synth.triggerAttackRelease(chord[i % chord.length], '8n', time + i * Time('32n'));\r\n            }\r\n        }, [{\r\n            time: 0\r\n        }])\r\n    },\r\n\r\n}\r\n\r\nvar synth = new Synth({oscillator: {type: 'sine'}}).toMaster();\r\n\r\nexport {\r\n    template,\r\n    loopMap,\r\n    synth\r\n}","import {Transport, context, Time} from 'tone'\r\n\r\n\r\nclass ChordItem {\r\n    constructor({chord, loop, single, amount, instance, start, stop, flag, type}) {\r\n        this.chord = chord;\r\n        this.loop = loop;\r\n        this.single = single;\r\n        this.amount = amount;\r\n        this.instance = instance;\r\n        this.start = start;\r\n        this.stop = stop;\r\n        this.flag = flag;\r\n        this.type = type;\r\n    }\r\n\r\n    focus() {\r\n        Transport.position = Time(this.start) - Time('32n');\r\n        if(!this.instance.playing) {\r\n            Transport.start();\r\n            Transport.stop(context.currentTime + this.amount * Time(`${this.single}n`));\r\n        }\r\n    }\r\n\r\n    setFlag() {\r\n        this.instance.flag = this.flag;\r\n    }\r\n}\r\n\r\nexport {ChordItem}","function handleFiles(e) {\r\n    return new Promise((resolve, reject) => {\r\n        let selectedFile = e.target.files[0];\r\n        let reader = new FileReader();\r\n        reader.readAsText(selectedFile);\r\n\r\n        reader.onload = function (e) {\r\n            resolve(e.target.result);\r\n        };\r\n    })\r\n\r\n}\r\n\r\nlet timer;\r\nfunction antiShake(fn) {\r\n    clearTimeout(timer);\r\n\r\n    timer = setTimeout(() => {\r\n        fn();\r\n    }, 500);\r\n}\r\n\r\nexport {\r\n    handleFiles,\r\n    antiShake\r\n}","import {\r\n    Time,\r\n    Transport,\r\n} from 'tone'\r\nimport {\r\n    template,\r\n    loopMap,\r\n    synth\r\n} from './sources'\r\nimport {\r\n    chord as getChord\r\n} from '../rad.js/index'\r\nimport {\r\n    ChordItem\r\n} from './chordItem'\r\nimport Vue from 'vue/dist/vue.js'\r\nimport {\r\n    handleFiles,\r\n    antiShake\r\n} from './utils'\r\n\r\nlet instance = new Vue({\r\n    template,\r\n    data: {\r\n        flag: 0,\r\n        bpm: 70,\r\n        type: 'scale',\r\n        types: [\r\n            'scale',\r\n            'quick'\r\n        ],\r\n        input: {\r\n            single: '4',\r\n            amount: '4',\r\n            chord: 'CM7'\r\n        },\r\n        initOctive: 4,\r\n        timeline: [],\r\n        json: [],\r\n        playing: false\r\n    },\r\n\r\n    watch: {\r\n        bpm: {\r\n            handler(val, oldVal) {\r\n                antiShake(() => {\r\n                    this.changeWave();\r\n                    Transport.bpm.value = val;\r\n                    this.caculateTime();\r\n                })\r\n            },\r\n            immediate: true\r\n        },\r\n    },\r\n\r\n    created() {\r\n        let initChords = [{\r\n                \"amount\": \"4\",\r\n                \"single\": \"4\",\r\n                \"chord\": \"FM7\",\r\n                \"type\": \"scale\"\r\n            },\r\n            {\r\n                \"amount\": \"4\",\r\n                \"single\": \"4\",\r\n                \"chord\": \"Em7\",\r\n                \"type\": \"scale\"\r\n            },\r\n            {\r\n                \"amount\": \"4\",\r\n                \"single\": \"4\",\r\n                \"chord\": \"Dm7\",\r\n                \"type\": \"scale\"\r\n            },\r\n            {\r\n                \"amount\": \"4\",\r\n                \"single\": \"4\",\r\n                \"chord\": \"CM7\",\r\n                \"type\": \"scale\"\r\n            }\r\n        ]\r\n\r\n        for (let i of initChords) {\r\n            let loop = loopMap[i.type](synth, getChord(i.chord, this.initOctive), i.single);\r\n            let chordItem = new ChordItem(Object.assign(i, {\r\n                loop,\r\n                instance: this\r\n            }));\r\n            this.timeline.push(chordItem);\r\n        }\r\n\r\n        this.caculateTime();\r\n    },\r\n\r\n    methods: {\r\n        changeWave() {\r\n            let waveOne = document.querySelector('.wave--one');\r\n            let waveTwo = document.querySelector('.wave--two');\r\n            waveOne.style.animationDuration = Math.ceil(360 / this.bpm) + 's';\r\n            waveTwo.style.animationDuration = Math.ceil(360 / this.bpm) + 's';\r\n        },\r\n\r\n        toggle() {\r\n            if (this.playing) this.stop();\r\n            else this.start();\r\n        },\r\n\r\n        start() {\r\n            this.playing = true;\r\n            Transport.stop();\r\n            Transport.start();\r\n        },\r\n\r\n        stop() {\r\n            this.playing = false;\r\n            this.flag = this.timeline.length - 1;\r\n            Transport.stop();\r\n        },\r\n\r\n        exportJson() {\r\n            let data = [];\r\n            for (let i of this.timeline) {\r\n                let {\r\n                    amount,\r\n                    single,\r\n                    chord,\r\n                    type\r\n                } = i;\r\n\r\n                data.push({\r\n                    amount,\r\n                    single,\r\n                    chord,\r\n                    type\r\n                })\r\n            }\r\n\r\n            let\r\n                json = JSON.stringify(data, undefined, 4),\r\n                blob = new Blob([json], {\r\n                    type: 'text/json'\r\n                }),\r\n                e = document.createEvent('MouseEvents'),\r\n                a = document.createElement('a')\r\n            a.download = 'RAD-PROGRESSION.json'\r\n            a.href = window.URL.createObjectURL(blob)\r\n            a.dataset.downloadurl = ['text/json', a.download, a.href].join(':')\r\n            e.initMouseEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null)\r\n            a.dispatchEvent(e)\r\n        },\r\n\r\n        async importJson(e) {\r\n            let data = await handleFiles(e);\r\n            let json = JSON.parse(data);\r\n\r\n            for (let i of json) {\r\n                let loop = loopMap[i.type](synth, getChord(i.chord, this.initOctive), i.single);\r\n                let chordItem = new ChordItem(Object.assign(i, {\r\n                    loop,\r\n                    instance: this\r\n                }));\r\n                this.timeline.push(chordItem);\r\n            }\r\n\r\n            this.caculateTime();\r\n        },\r\n\r\n        addItem({\r\n            amount,\r\n            single,\r\n            chord,\r\n            type\r\n        }) {\r\n            let chordArr;\r\n\r\n            try {\r\n                chordArr = getChord(chord, this.initOctive);\r\n            } catch (e) {\r\n                console.log(e);\r\n                return;\r\n            }\r\n\r\n            if (!(amount.match(/^\\d$/) && single.match(/^\\d$/)))\r\n                throw `[Rad-Club] The parameter \"${amount}/${single}\" is not valid`\r\n\r\n            let loop = loopMap[type](synth, chordArr, single);\r\n            let chordItem = new ChordItem({\r\n                chord,\r\n                loop,\r\n                type,\r\n                amount,\r\n                single,\r\n                instance: this\r\n            })\r\n\r\n            this.timeline.splice(this.flag + 1, 0, chordItem);\r\n            this.caculateTime();\r\n\r\n            this.timeline[chordItem.flag].focus();\r\n        },\r\n\r\n        add() {\r\n            let {\r\n                amount,\r\n                single,\r\n                chord\r\n            } = this.input;\r\n            let type = this.type;\r\n\r\n            this.addItem({\r\n                amount,\r\n                single,\r\n                chord,\r\n                type\r\n            });\r\n        },\r\n\r\n        remove(instance) {\r\n            this.timeline.splice(instance.flag, 1);\r\n            this.caculateTime();\r\n        },\r\n\r\n        caculateLoop() {\r\n            let tile = this.timeline[this.timeline.length - 1];\r\n            if (tile) {\r\n                Transport.loopEnd = this.timeline[this.timeline.length - 1].stop;\r\n                Transport.loop = true;\r\n            } else Transport.loop = false;\r\n        },\r\n\r\n        caculateTime() {\r\n            Transport.cancel();\r\n\r\n            let timeFlag = Time(0);\r\n            let flag = 0;\r\n            for (let item of this.timeline) {\r\n                let {\r\n                    loop,\r\n                    amount,\r\n                    single\r\n                } = item;\r\n\r\n                let start = timeFlag;\r\n                timeFlag += amount * Time(`${single}n`);\r\n                let stop = timeFlag;\r\n\r\n                item.start = start;\r\n                item.stop = stop;\r\n                item.flag = flag++;\r\n\r\n                loop.cancel();\r\n                loop.start(item.start);\r\n\r\n                loop.loop = Number(amount);\r\n                loop.loopEnd = `${single}n`;\r\n\r\n                Transport.schedule((time) => {\r\n                    item.setFlag();\r\n                }, item.start);\r\n            }\r\n\r\n            this.caculateLoop();\r\n        }\r\n    }\r\n})\r\n\r\nexport {\r\n    instance\r\n}"],"sourceRoot":""}